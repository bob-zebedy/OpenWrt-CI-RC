# https://github.com/deplives/OpenWrt-CI-RC

name: OpenWrt Builder RC

on:
  repository_dispatch:
    types:
      - webhook

  workflow_dispatch:
    inputs:
      mode:
        description: "Mode(stable|beta)"
        required: true
        default: "beta"

      commit_sha:
        description: "Commit SHA"
        required: false
        default: ""

      kernel:
        description: "Kernel"
        required: false
        default: ""

      remark:
        description: "Remark"
        required: false
        default: "manually"

      debug:
        description: "Debug(debug|release)"
        required: true
        default: "release"

env:
  REPO: https://github.com/deplives/lede.git
  CONFIG: x86.${{ github.event.inputs.mode }}.config
  FIRST_SH: first.sh
  SECOND_SH: second.sh
  THIRD_SH: third.sh
  PATCH_SH: patch.sh
  TIMEZONE: Asia/Shanghai

jobs:
  Compile:
    runs-on: ubuntu-20.04

    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          ref: main
          fetch-depth: 0

      - name: Check server performance
        run: |
          echo -e "已知CPU型号性能排序: 7763 > 8370C > 8272CL > 8171M > E5-2673"
          echo "--------------------------CPU型号--------------------------"
          echo -e "$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq | awk '{$1=$1; print}')"
          echo "--------------------------内存信息--------------------------"
          echo -e "$(sudo lshw -short -C memory | grep GiB)"
          echo "--------------------------硬盘信息--------------------------"
          echo -e "$(df -hT)"

      - name: Space cleanup
        if: success() && !cancelled()
        run: |
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/.ghcup || true

          sudo apt-get remove -y '^aspnetcore-.*'
          sudo apt-get remove -y '^dotnet-.*' --fix-missing
          sudo apt-get remove -y '^llvm-.*' --fix-missing
          sudo apt-get remove -y 'php.*' --fix-missing
          sudo apt-get remove -y '^mongodb-.*' --fix-missing
          sudo apt-get remove -y '^mysql-.*' --fix-missing
          sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri --fix-missing
          sudo apt-get remove -y google-cloud-sdk --fix-missing
          sudo apt-get remove -y google-cloud-cli --fix-missing
          sudo apt-get autoremove -y
          sudo apt-get clean

          sudo docker image prune --all --force || true

          sudo swapoff -a || true
          sudo rm -f /mnt/swapfile || true

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        if: success() && !cancelled()
        run: |
          sudo timedatectl set-timezone "$TIMEZONE"
          sudo -E apt-get update
          sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/deplives/openwrt-rely/main/ubuntu)
          sudo mkdir -p /mnt/workdir
          sudo chown $USER:$GROUPS /mnt/workdir

      - name: Show disk space
        run: |
          df -hT

      - name: Clone source code
        working-directory: /mnt/workdir
        if: success() && !cancelled()
        run: |
          if [ ${{ github.event.inputs.mode }} = 'stable' ]; then
            git clone $REPO openwrt
          else
            git clone $REPO -b ${{ github.event.inputs.mode }} openwrt
          fi
          ln -sf /mnt/workdir/openwrt ${GITHUB_WORKSPACE}/openwrt
          cd openwrt
          if [ -n "${{ github.event.inputs.commit_sha }}" ]; then 
            git reset --hard ${{ github.event.inputs.commit_sha }}
          fi
          echo "COMMITHASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Run first.sh
        if: success() && !cancelled()
        run: |
          chmod +x $FIRST_SH
          cd openwrt
          ${GITHUB_WORKSPACE}/$FIRST_SH ${{ github.event.inputs.mode }}

      - name: Update feeds
        if: success() && !cancelled()
        run: cd openwrt && ./scripts/feeds update -a

      - name: Run patch.sh
        if: success() && !cancelled()
        run: |
          chmod +x $PATCH_SH
          cp -a patches openwrt
          cd openwrt
          ${GITHUB_WORKSPACE}/$PATCH_SH

      - name: Run second.sh
        if: success() && !cancelled()
        run: |
          chmod +x $SECOND_SH
          cd openwrt
          ${GITHUB_WORKSPACE}/$SECOND_SH ${{ github.event.inputs.mode }} ${{ env.COMMITHASH }}

      - name: Install feeds
        if: success() && !cancelled()
        run: cd openwrt && ./scripts/feeds install -a

      - name: Run third.sh
        if: success() && !cancelled()
        run: |
          chmod +x $THIRD_SH
          cd openwrt
          ${GITHUB_WORKSPACE}/$THIRD_SH

      - name: Restore configuration
        if: success() && !cancelled()
        run: |
          [ -e files ] && mv files openwrt/files
          HTTPCODE=$(curl -s -w "%{http_code}" "${{ secrets.REMOTE_CONFIG_URL }}/x86.${{ github.event.inputs.mode }}.config" -o openwrt/.config)
          if [ $HTTPCODE != 200 ]; then
            echo 'Get remote config failed!'
            [ -e $CONFIG ] && mv $CONFIG openwrt/.config
          fi

      - name: Switch kernel
        if: success() && !cancelled()
        run: |
          cd openwrt
          if [ -n "${{ github.event.inputs.kernel }}" ]; then
            CURRENT_KERNEL_PATCHVER=$(cat target/linux/x86/Makefile | grep KERNEL_PATCHVER | awk -F ':=' '{print $2}')
            CURRNET_KERNEL_TESTING_PATCHVER=$(cat target/linux/x86/Makefile | grep KERNEL_TESTING_PATCHVER | awk -F ':=' '{print $2}')
            CONFIG_KERNEL_PATCHVER=$(echo "${{ github.event.inputs.kernel }}" | sed 's/\./_/g')
            sed -i "s/KERNEL_PATCHVER:=${CURRENT_KERNEL_PATCHVER}/KERNEL_PATCHVER:=${{ github.event.inputs.kernel }}/g" target/linux/x86/Makefile
            sed -i "s/KERNEL_TESTING_PATCHVER:=${CURRNET_KERNEL_TESTING_PATCHVER}/KERNEL_TESTING_PATCHVER:=${{ github.event.inputs.kernel }}/g" target/linux/x86/Makefile
            sed -i "s/CONFIG_LINUX.*/CONFIG_LINUX_${CONFIG_KERNEL_PATCHVER}=y/g" .config
          fi
          KERNEL_PATCHVER=$(cat target/linux/x86/Makefile | grep KERNEL_PATCHVER | awk -F ':=' '{print $2}')
          KERNEL=${KERNEL_PATCHVER}$(cat include/kernel-"$KERNEL_PATCHVER" | grep LINUX_VERSION | awk -F '= ' '{print $2}')
          echo "KERNEL=$KERNEL" >> $GITHUB_ENV

      - name: Download package
        if: success() && !cancelled()
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Cache
        uses: deplives/cachewrt@main
        with:
          ccache: true
          prefix: /mnt/workdir/openwrt

      - name: Compile firmware
        if: success() && !cancelled()
        run: |
          echo "开始编译: ${{ env.KERNEL }} ${{ github.event.inputs.mode }}"
          curl -s "${{ secrets.BARK_URL }}/GitHub%20Action/仓库:%20OpenWrt-CI-RC%0a状态:%20开始编译(${{ env.KERNEL }} ${{ github.event.inputs.mode }})?group=OpenWrt&icon=https://raw.githubusercontent.com/deplives/Images/main/OpenWrt.png"
          cd openwrt
          if [ ${{ github.event.inputs.debug }} = 'release' ]; then
            make -j$(nproc)
          else
            make -j$(nproc) || make -j1 V=sc
          fi

      - name: Check space usage
        if: success() && !cancelled()
        run: df -hT

      - name: Organize files
        if: success() && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          shopt -s extglob
          rm -rf !(*.img|*.vmdk)
          shopt -u extglob
          sha256sum * > sha256sum.txt
          cp /mnt/workdir/openwrt/.config $CONFIG
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Generate release tag
        id: tag
        if: success() && !cancelled()
        run: |
          echo "release_tag=OpenWrt-$(date +'%Y%m%d%H%M')-${{ env.KERNEL }}-${{ github.event.inputs.mode }}" >> $GITHUB_OUTPUT
          touch release.txt
          echo "Kernel Version: ${{ env.KERNEL }}" > release.txt
          echo "Commit SHA: ${{ env.COMMITHASH }}" >> release.txt
          echo "Release Note: ${{ github.event.inputs.remark }}" >> release.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        if: success() && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: Prepare artifact
        if: success() && !cancelled()
        run: |
          mkdir -p artifact
          [ -e openwrt/.config ] && cp openwrt/.config artifact/x86.${{ github.event.inputs.mode }}.config

      - name: Upload artifact
        if: success() && !cancelled()
        uses: actions/upload-artifact@v3
        with:
          name: openwrt_config
          path: ./artifact/

      - name: Compile Succeeded
        if: success() && !cancelled()
        run: |
          curl -s "${{ secrets.BARK_URL }}/GitHub%20Action/仓库:%20OpenWrt-CI-RC%0a状态:%20编译成功(${{ env.KERNEL }} ${{ github.event.inputs.mode }})?group=OpenWrt&icon=https://raw.githubusercontent.com/deplives/Images/main/OpenWrt.png"

      - name: Compile Failed
        if: failure() && !cancelled()
        run: |
          curl -s "${{ secrets.BARK_URL }}/GitHub%20Action/仓库:%20OpenWrt-CI-RC%0a状态:%20编译失败(${{ env.KERNEL }} ${{ github.event.inputs.mode }})?group=OpenWrt&icon=https://raw.githubusercontent.com/deplives/Images/main/OpenWrt.png"

      - name: Remove workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 1
